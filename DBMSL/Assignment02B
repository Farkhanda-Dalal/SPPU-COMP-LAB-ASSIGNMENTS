Name: Farkhanda Dalal Roll No: 31418
Batch: K4 Assignment No: 2
1.	Create Student Table:

create table students(

id int auto_increment primary key, drive_id int,
training_id int, name varchar(255), cgpa float,
branch varchar(255)	,

foreign key( drive_id ) references placement_drives(id) on delete cascade, foreign key( training_id ) references training(id) on delete cascade
) ;

2.	Create Placement Drives Table: create table placement_drives(
id int auto_increment primary key, company_name varchar(255), package int,
location varchar(255)

);

3.	Create Training Table:

create table training(

id int auto_increment primary key,
 
company_name varchar(255), fee int,
training_year year

) ;



/*

Referencial Integrity Constraints (Optional)


alter table students

add constraint student_drive

foreign key(drive_id) references placement_drives(id);



alter table students

add constraint student_training

foreign key(training_id) references training(id);

*/



4.	Create Index:

create index index_students_name on students(name) ;


-- Composite index

create index index_training_company_nane

on training(company_name,training_year);
 


-- Unique index

create unique index index_placement_drive_package on placement_drives(package);


-- Text-search index

create index index_text_students_name on students(name(10))


-5. Create Views

create view comp_students as select * from students where branch = 'CE';


create view pune_placement_drives as select * from placement_drives where location = 'pune';


Queries:

1.	Insert Data in Placement Table:

insert into placement_drives(company_name,package,location) values
( 'imocha' , 20 , 'pune' ) ,

( 'barclays' , 6 , 'pune' ) ,

( 'tracelink' , 50 , 'mumbai' ) ,
 
( 'mastercard' , 40 , 'bengaluru' ) , ( 'google' , 30 , 'mumbai' ) ;


2.	Insert Data in TrainingTable:

insert into training(company_name,fee,training_year) values
( 'imocha' , 2000 , '2020' ) ,

( 'barclays' , 500 , '2022' ) ,

( 'tracelink' , 350 , '2021' ) ,

( 'mastercard' , 230 , '2019' ) ,

( 'google' , 5000 , '2019' ) ;


3.	1. Insert Data in Student Table:

insert into students( drive_id , training_id , name , cgpa , branch ) values
( 1 , 2 , 'Farkhanda Dalal' , 8.7 , 'CE' ),

( 1 , 3 , 'Aryan Kadole' , 8.7 , 'CE' ),

( 3 , 2 , 'Misbah Bagwan' , 9.2 , 'CE' ),

( 2 , 2 , 'Mansi Jangle' , 8.5 , 'IT' ),
 
( 1 , 4 , 'Nilakshi Sonawane' , 9.7 , 'IT' ),

( 4 , 1 , 'Juned Desai' , 8.0 , 'IT' ),

( 3 , 3 , 'Shreeja Barve' , 6.8 , 'ENTC' ),

( 2 , 5 , 'Poorva Dhepe' , 7.8 , 'ENTC' ),

( 5 , 5 , 'Gopal Dose' , 7.9 , 'CE' ),

( 4 , 4 , 'Vaisnavi Patil' , 7.6 , 'CE' );


2.	Display all students details with branch ‘Computer ‘and ‘It’ and student name starting with  'a' or 'd'.
select * from students

where (branch = 'CE' || branch = 'IT') && (name like 'A%' || name like 'D%');


3.	list the number of different companies.(use of distinct) select distinct company_name from training;

 
4.	Give 15% increase in fee of the Training whose joining year is 2019. select company_name, fee * 0.15, training_year from training
where training_year = '2019';






-




5.	Delete Student details having CGPA score less than 7. delete from students
where cgpa < 7.0;



6.	Find the names of companies belonging to Pune or Mumbai select company_name,location from placement_drives
where location in( 'mumbai' , 'pune' );



7.	Find the student name who joined training in 1-1-2019 as well as in 1-1-2021 select s.name from
students s join training t on s.training_id = t.id
 
where t.training_year in( '2021' , '2019' );


8.	Find the student name having maximum CGPA score and names of students having CGPA score between 7 to 9 .
select max(cgpa) from students

where cgpa between 7.0 and 9.0;


9.	Display all Student name with T_id with decreasing order of Fees select t.id, t.fee, s.name from students s join training t on s.id=t.id
order by t.fee desc;
 
10.	Display Company name, S_name ,location and Package with Package 30K, 40K and 50k select pd.company_name , s.name , pd.location , pd.package from
placement_drives pd join students s on pd.id=s.id where pd.package in( 30 , 40 , 50 );
